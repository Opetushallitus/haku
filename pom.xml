<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2012 The Finnish Board of Education - Opetushallitus
  ~
  ~ This program is free software:  Licensed under the EUPL, Version 1.1 or - as
  ~ soon as they will be approved by the European Commission - subsequent versions
  ~ of the EUPL (the "Licence");
  ~
  ~ You may not use this work except in compliance with the Licence.
  ~ You may obtain a copy of the Licence at: http://www.osor.eu/eupl/
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ European Union Public Licence for more details.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>fi.vm.sade.haku</groupId>
    <version>1.0-SNAPSHOT</version>
    <artifactId>haku</artifactId>
    <packaging>war</packaging>
    <name>Oppijan verkkopalvelu :: Haku</name>


    <dependencies>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>2.24.1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-firefox-driver</artifactId>
            <version>2.24.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>1.2</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
        <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.2.2</version>
        </dependency>
        <!-- Testing -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${servlet.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>javax.servlet.jsp-api</artifactId>
            <version>2.2.1</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.mongodb</groupId>
            <artifactId>mongo-java-driver</artifactId>
            <version>${mongo.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.17</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aspects</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-taglibs</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <version>1.6.12</version>
        </dependency>
        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
            <version>2.2.2</version>
        </dependency>

        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>1.6.12</version>
        </dependency>
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>1.2.2</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.1</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.4</version>
        </dependency>
        <dependency>
            <groupId>com.cenqua.clover</groupId>
            <artifactId>clover</artifactId>
            <version>3.1.7</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>13.0.1</version>
        </dependency>
        <dependency>
            <groupId>net.sf.saxon</groupId>
            <artifactId>Saxon-HE</artifactId>
            <version>9.4</version>
            <exclusions>
                <exclusion>
                    <artifactId>xalan</artifactId>
                    <groupId>xalan</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Jersey -->
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-server</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-json</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey.contribs</groupId>
            <artifactId>jersey-multipart</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <!-- Jersey + Spring -->
        <dependency>
            <groupId>com.sun.jersey.contribs</groupId>
            <artifactId>jersey-spring</artifactId>
            <version>${jersey.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-web</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-beans</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-context</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-aop</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-aspects</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- it -->
        <dependency>
            <groupId>net.sourceforge.jwebunit</groupId>
            <artifactId>jwebunit-htmlunit-plugin</artifactId>
            <version>3.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-logging-juli</artifactId>
            <version>7.0.26</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jdt.core.compiler</groupId>
            <artifactId>ecj</artifactId>
            <version>3.7.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-jasper</artifactId>
            <version>7.0.26</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.shrinkwrap</groupId>
            <artifactId>shrinkwrap-api</artifactId>
            <version>1.0.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.shrinkwrap</groupId>
            <artifactId>shrinkwrap-impl-base</artifactId>
            <version>1.0.1</version>
            <scope>test</scope>
            <!-- Don't rely upon internals for compilation -->
        </dependency>
        <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-api-maven</artifactId>
            <version>2.0.0-alpha-1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
            <version>2.0.0-alpha-1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.solr</groupId>
            <artifactId>solr</artifactId>
            <version>4.0.0-BETA</version>
            <type>war</type>
            <scope>tomcat</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.solr</groupId>
            <artifactId>solr-solrj</artifactId>
            <version>4.0.0-BETA</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.sonar-plugins</groupId>
            <artifactId>sonar-clover-plugin</artifactId>
            <version>2.8</version>
            <scope>test</scope>
        </dependency>
        <!-- /it -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>1.9.5</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>fi.vm.sade.log</groupId>
            <artifactId>log-client</artifactId>
            <version>1.0-SNAPSHOT</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>

        </dependency>
    </dependencies>
    <properties>
        <project.svn.base>https://penaali.hard.ware.fi/svn/generic/${project.artifactId}</project.svn.base>
        <junit.version>4.10</junit.version>
        <spring.version>3.1.3.RELEASE</spring.version>
        <jersey.version>1.17</jersey.version>
        <servlet.version>3.0.1</servlet.version>
        <mongo.version>2.8.0</mongo.version>
        <slf4j.version>1.6.6</slf4j.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <clover.outputDirectory>/data00/atlassian/application-data/bamboo/www/clover_haku</clover.outputDirectory>
        <maven.build.timestamp.format>dd.MM.yyyy HH:mm</maven.build.timestamp.format>
        <buildDate>${maven.build.timestamp}</buildDate>
    </properties>
    <repositories>
        <repository>
            <id>codehaus</id>
            <url>http://repository.codehaus.org/org/codehaus</url>
        </repository>
        <repository>
            <id>oph-sade-artifactory-snapshots</id>
            <url>http://penaali.hard.ware.fi/artifactory/oph-sade-snapshot-local</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>oph-sade-artifactory-releases</id>
            <url>http://penaali.hard.ware.fi/artifactory/oph-sade-release-local</url>
        </repository>
        <repository>
            <id>repository.jboss.org</id>
            <name>JBoss Repository</name>
            <url>http://repository.jboss.org/nexus/content/groups/public-jboss/</url>
        </repository>

    </repositories>
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.5.1</version>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>
            <plugin>
                <!-- explicitly define maven-deploy-plugin after other to force exec
               order -->
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.7</version>
                <executions>
                    <execution>
                        <id>deploy</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>deploy</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- this is because war dependency is added to project output-->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.3</version>
                <configuration>
                    <dependentWarExcludes>**/*</dependentWarExcludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <tagBase>${project.svn.base}/releases</tagBase>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.9</version>
                <configuration>
                    <excludes>
                        <exclude>**/it/*.java</exclude>
                        <exclude>**/selenium/*.java</exclude>
                    </excludes>
                    <argLine>-Xms512M -Xmx1G -XX:MaxPermSize=512M</argLine>
                </configuration>
            </plugin>

            <!--<plugin>
               <groupId>org.codehaus.gmaven</groupId>
               <artifactId>gmaven-plugin</artifactId>
               <executions>
                   <execution>
                       <goals>
                           <goal>generateStubs</goal>
                           <goal>compile</goal>
                           <goal>generateTestStubs</goal>
                           <goal>testCompile</goal>
                       </goals>
                   </execution>
               </executions>
           </plugin> -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>tomcat-maven-plugin</artifactId>
                <version>1.1</version>
                <configuration>
                    <charset>UTF-8</charset>
                    <uriEncoding>UTF-8</uriEncoding>
                    <addContextWarDependencies>true</addContextWarDependencies>
                    <systemProperties>
                        <solr.solr.home>${project.build.directory}/classes/solr</solr.solr.home>
                    </systemProperties>
                </configuration>

            </plugin>

            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/haku/resources/</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources</directory>
                                    <filtering>true</filtering>
                                    <includes>
                                        <include>version.txt</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <finalName>haku</finalName>
    </build>

    <profiles>

        <profile>
            <id>integration-test</id>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>2.12</version>
                        <configuration>
                            <argLine>-Xms512M -Xmx1G -XX:MaxPermSize=256M</argLine>
                            <includes>
                                <include>**/it/*</include>
                                <include>**/selenium/*</include>
                            </includes>
                            <testFailureIgnore>false</testFailureIgnore>
                            <classpathDependencyExcludes>
                                <classpathDependencyExcludes>net.sf.saxon:Saxon-HE</classpathDependencyExcludes>
                            </classpathDependencyExcludes>
                        </configuration>
                        <executions>
                            <execution>
                                <id>integration-test</id>
                                <goals>
                                    <goal>integration-test</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>verify</id>
                                <goals>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>clover</id>
            <properties>
                <clover.version>3.1.4</clover.version>
                <clover.fullRunEvery>500</clover.fullRunEvery>
                <clover.generateHistorical>true</clover.generateHistorical>
                <clover.base>/data00/atlassian/application-data/bamboo/clover_haku</clover.base>
                <clover.historyDir>${clover.base}/history</clover.historyDir>
                <clover.snapshot>${clover.base}/snapshot/clover.snapshot</clover.snapshot>
                <clover.cloverDatabase>${clover.base}/db/clover.db</clover.cloverDatabase>
            </properties>

            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>clean-clover</id>
                                <phase>clean</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <task>
                                        <echo>Clean clover output directory from ${clover.base}.</echo>
                                    </task>
                                    <tasks>
                                        <delete includeemptydirs="true" failonerror="false">
                                            <fileset dir="${clover.base}">
                                                <include name="**/**"/>
                                                <exclude name="history/**"/>
                                            </fileset>
                                        </delete>
                                        <delete includeemptydirs="true" failonerror="false">
                                            <fileset dir="${clover.outputDirectory}">
                                                <include name="**/**"/>
                                            </fileset>
                                        </delete>
                                    </tasks>
                                </configuration>
                            </execution>
                            <execution>
                                <id>clean-clover-report</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <task>
                                        <echo>Clean clover report directory from ${clover.outputDirectory}.</echo>
                                    </task>
                                    <tasks>
                                        <delete includeemptydirs="true" failonerror="false">
                                            <fileset dir="${clover.outputDirectory}">
                                                <include name="**/**"/>
                                            </fileset>
                                        </delete>
                                    </tasks>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.atlassian.maven.plugins</groupId>
                        <artifactId>maven-clover2-plugin</artifactId>
                        <version>${clover.version}</version>

                        <configuration>
                            <license><![CDATA[rpRQNMNVbDQGOEFKsVQKeIihqPnFbdDEHvvNdDVKJlFhJhe
									  mj2KgKqUCcBA763sFqgbibB52L0Cp0MzNnhQ88tyJuOnONl
									  mQQqssopQmnQMMroQMPVTqPQRnpqrQNQOPTtWuTusvWnvSs
									  vtWXTmTTTTSosUoWSxxStWuswtMRnmnmUUnppnpuqqmmmmm
									  UUnppnpuqqmmmmmUU6fkkfpeWEXqflkXiW2lXoaWlcW5arZ
									  XqflkUUor]]></license>
                            <snapshot>${clover.snapshot}</snapshot>
                            <singleCloverDatabase>${clover.singleCloverDatabase}</singleCloverDatabase>
                            <cloverDatabase>${clover.cloverDatabase}</cloverDatabase>
                            <outputDirectory>${clover.outputDirectory}</outputDirectory>
                            <generateHistorical>${clover.generateHistorical}</generateHistorical>
                            <historyDir>${clover.historyDir}</historyDir>
                            <alwaysReport>true</alwaysReport>
                            <generateXml>true</generateXml>
                            <includesAllSourceRoots>true</includesAllSourceRoots>
                            <!--
                                   <includes>
                                       <include>**/api/**/*.java</include>
                                       <include>some/path/MyFile.java</include>
                                       [...]
                                   </includes>
                                   <excludes>
                                       <exclude>**/*Test/java</exclude>
                                       [...]
                                   </excludes>
                                   <targetPercentage>50%</targetPercentage>
                                   -->
                        </configuration>
                        <executions>
                            <execution>
                                <id>clover</id>
                                <goals>
                                    <goal>setup</goal>
                                    <!--
                                             <goal>optimize</goal>-->
                                    <goal>snapshot</goal>
                                </goals>
                            </execution>
                            <execution>
                                <phase>verify</phase>
                                <goals>
                                    <goal>clover</goal>
                                    <goal>log</goal>
                                    <!-- <goal>check</goal> disable check until we have selenium testi
                                                 up and running in bamboo -->
                                    <goal>save-history</goal>
                                </goals>
                            </execution>
                        </executions>

                    </plugin>
                </plugins>
            </build>
            <dependencies>
                <dependency>
                    <groupId>com.cenqua.clover</groupId>
                    <artifactId>clover</artifactId>
                    <version>${clover.version}</version>
                </dependency>
                <dependency>
                    <groupId>ant-contrib</groupId>
                    <artifactId>ant-contrib</artifactId>
                    <version>1.0b3</version>
                    <exclusions>
                        <exclusion>
                            <groupId>ant</groupId>
                            <artifactId>ant</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>

            </dependencies>
        </profile>

        <profile>
            <id>sonar</id>
            <properties>
                <!-- Dynamic analysis relates to unit tests. By default, those unit tests
                        are executed but you can optionally decide to do only static analysis or
                        to reuse existing reports which have been previously generated. Possible
                        values are true, false, reuseReports. -->
                <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>

                <!-- The absolute or relative path of the surefire reports directory.
                        Used only if sonar.dynamicAnalysis is reuseReports. -->
                <sonar.surefire.reportsPath>${project.build.directory}/surefire-reports</sonar.surefire.reportsPath>
                <!-- The absolute or relative path of the clover xml report file. Used
                        only if sonar.dynamicAnalysis is reuseReports. -->
                <sonar.core.codeCoveragePlugin>clover</sonar.core.codeCoveragePlugin>
                <sonar.clover.reportPath>${clover.outputDirectory}/clover.xml</sonar.clover.reportPath>

                <!-- EXAMPLE FOR MYSQL
                    mysqldump -usonar -pDx4k7T23x3ox8yS sonar > sonar.db.bak.sql
                    -->
                <sonar.jdbc.url>jdbc:mysql://localhost:3306/sonar?useUnicode=true&amp;characterEncoding=utf8
                </sonar.jdbc.url>
                <sonar.jdbc.driverClassName>com.mysql.jdbc.Driver</sonar.jdbc.driverClassName>
                <sonar.jdbc.username>sonar</sonar.jdbc.username>
                <sonar.jdbc.password>Dx4k7T23x3ox8yS</sonar.jdbc.password>
                <!-- optional URL to server. Default value is http://localhost:9000 -->
                <sonar.host.url>http://pulpetti.hard.ware.fi:9000/sonar</sonar.host.url>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>org.codehaus.sonar-plugins</groupId>
                    <artifactId>sonar-clover-plugin</artifactId>
                    <version>2.8</version>
                </dependency>
            </dependencies>
        </profile>

    </profiles>

    <distributionManagement>
        <repository>
            <id>oph-sade-artifactory</id>
            <name>oph-sade-artifactory-releases</name>
            <url>http://penaali.hard.ware.fi/artifactory/oph-sade-release-local</url>
        </repository>
        <snapshotRepository>
            <id>oph-sade-artifactory</id>
            <name>oph-sade-artifactory-snapshots</name>
            <url>http://penaali.hard.ware.fi/artifactory/oph-sade-snapshot-local</url>
        </snapshotRepository>
    </distributionManagement>
</project>
	
