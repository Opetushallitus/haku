<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2012 The Finnish Board of Education - Opetushallitus
  ~
  ~ This program is free software:  Licensed under the EUPL, Version 1.1 or - as
  ~ soon as they will be approved by the European Commission - subsequent versions
  ~ of the EUPL (the "Licence");
  ~
  ~ You may not use this work except in compliance with the Licence.
  ~ You may obtain a copy of the Licence at: http://www.osor.eu/eupl/
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ European Union Public Licence for more details.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">


    <beans profile="default">
        <context:property-placeholder
                location="file:///${user.home:''}/oph-configuration/haku.properties,
                          file:///${user.home:''}/oph-configuration/common.properties,
                          file:///${user.home:''}/oph-configuration/override.properties"
                ignore-resource-not-found="true" properties-ref="defaultProps"/>

        <bean id="defaultProps" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
            <property name="properties">
                <util:properties local-override="true">
                    <prop key="cas_mode">front</prop>
                    <prop key="cas_key">haku</prop>
                    <prop key="cas_service">${cas.service.haku}</prop>
                    <prop key="cas_callback_url">${cas.callback.haku}</prop>
                    <prop key="spring_security_default_access">permitAll</prop>
                </util:properties>

            </property>
        </bean>
        <import resource="file:///${user.home:''}/oph-configuration/security-context-backend.xml"/>
        <import resource="classpath:/META-INF/spring/logger-context.xml"/>
    </beans>

    <beans profile="devluokka">
        <bean class="fi.vm.sade.haku.LoggerConfigurer">
          <constructor-arg><value>config/dev/log4j.properties</value></constructor-arg>
        </bean>

        <context:property-placeholder
                location="classpath:config/dev/haku.properties, config/dev/classpath:ext.properties,
                    file:///${user.home:''}/oph-configuration/haku.properties,
                    file:///${user.home:''}/oph-configuration/common.properties"
                ignore-resource-not-found="true" properties-ref="devProps"/>
        <bean id="devProps" class="org.springframework.beans.factory.config.PropertiesFactoryBean"/>
        <import resource="form-login-security-context.xml"/>
        <bean id="logger" class="fi.vm.sade.log.client.LoggerMock" />
    </beans>

    <beans profile="dev">
      <bean class="fi.vm.sade.haku.LoggerConfigurer">
        <constructor-arg><value>config/dev/log4j.properties</value></constructor-arg>
      </bean>

      <context:property-placeholder
                location="classpath:config/dev/haku.properties, classpath:config/dev/ext.properties,
                    file:///${user.home:''}/oph-configuration/haku.properties,
                    file:///${user.home:''}/oph-configuration/common.properties"
                ignore-resource-not-found="true" properties-ref="devProps"/>
        <bean id="devProps" class="org.springframework.beans.factory.config.PropertiesFactoryBean"/>
        <import resource="form-login-security-context.xml"/>
        <import resource="integration-test-mock-context.xml"/>
    </beans>

    <beans profile="it">
        <bean class="fi.vm.sade.haku.LoggerConfigurer">
          <constructor-arg><value>config/it/log4j.properties</value></constructor-arg>
        </bean>

        <context:property-placeholder
                location="classpath:config/it/haku.properties, classpath:config/it/ext.properties, classpath:haku-test.properties"
                ignore-resource-not-found="true" properties-ref="itProps"/>
        <bean id="itProps" class="org.springframework.beans.factory.config.PropertiesFactoryBean"/>
        <import resource="form-login-security-context.xml"/>
        <import resource="integration-test-mock-context.xml"/>
    </beans>

    <beans profile="vagrant">
        <context:property-placeholder
                location="classpath:haku-vagrant.properties"
                ignore-resource-not-found="true" properties-ref="vagrantProps"/>

        <bean id="vagrantProps" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
            <property name="properties">
                <util:properties local-override="true">
                    <prop key="cas_mode">front</prop>
                    <prop key="cas_key">haku</prop>
                    <prop key="cas_service">${cas.service.haku}</prop>
                    <prop key="cas_callback_url">${cas.callback.haku}</prop>
                    <prop key="spring_security_default_access">permitAll</prop>
                </util:properties>

            </property>
        </bean>
        <import resource="classpath:security-context-backend-vagrant.xml"/>
    </beans>

    <beans>
        <context:annotation-config/>

        <context:component-scan
                base-package="fi.vm.sade.haku,fi.vm.sade.security,fi.vm.sade.organisaatio.service.search"/>
        <aop:aspectj-autoproxy/>

        <bean id="yksilointiScheduler" class="fi.vm.sade.haku.oppija.postprocess.Scheduler">
            <property name="run" value="${scheduler.run}"/>
            <property name="runModelUpgrade" value="${scheduler.runModelUpgrade}"/>
            <property name="runEligibilityCheck" value="${scheduler.runEligibilityCheck}"/>
            <property name="sendMail" value="${scheduler.sendMail}"/>
            <property name="demoCleanup" value="${scheduler.demoCleanup}"/>
        </bean>
        
        <task:scheduler id="postProcessScheduler" pool-size="1"/>
        <task:scheduled-tasks scheduler="postProcessScheduler">
            <task:scheduled ref="yksilointiScheduler" method="runProcess" fixed-delay="${scheduler.delay}"/>
            <task:scheduled ref="yksilointiScheduler" method="redoPostprocess" fixed-delay="${scheduler.delay}"/>
        </task:scheduled-tasks>

        <task:scheduler id="identificationScheduler" pool-size="1"/>
        <task:scheduled-tasks scheduler="identificationScheduler">
            <task:scheduled ref="yksilointiScheduler" method="runIdentification" fixed-delay="${scheduler.delay}"/>
        </task:scheduled-tasks>

        <task:scheduler id="upgradeScheduler" pool-size="1"/>
        <task:scheduled-tasks scheduler="upgradeScheduler">
            <task:scheduled ref="yksilointiScheduler" method="runModelUpgrade" cron="${scheduler.modelUpgradeCron}"/>
        </task:scheduled-tasks>

        <task:scheduler id="eligibilityCheckScheduler" pool-size="1"/>
        <task:scheduled-tasks scheduler="eligibilityCheckScheduler">
            <task:scheduled ref="yksilointiScheduler" method="runEligibilityCheck" cron="${scheduler.eligibilityCheckCron}"/>
        </task:scheduled-tasks>

        <task:scheduler id="demoCleanupScheduler" pool-size="1"/>
        <task:scheduled-tasks scheduler="demoCleanupScheduler">
            <task:scheduled ref="yksilointiScheduler" method="runDemoModeCleanup" cron="${scheduler.runDemoModeCleanupCron}"/>
        </task:scheduled-tasks>

        <!-- Swagger stuff -->
        <bean id="apiListingResourceJSON" class="com.wordnik.swagger.jersey.listing.ApiListingResourceJSON"/>
        <bean id="apiDeclarationProvider" class="com.wordnik.swagger.jersey.listing.JerseyApiDeclarationProvider" scope="singleton"/>
        <bean id="resourceListingProvider" class="com.wordnik.swagger.jersey.listing.JerseyResourceListingProvider" scope="singleton"/>
        
        <bean id="beanConfig" class="com.wordnik.swagger.jaxrs.config.BeanConfig">
            <property name="title" value="Haku App"/>
            <property name="version" value="1.0.0" />
            <property name="basePath" value="https://${host.virkailija}/haku-app"/>
            <property name="resourcePackage" value="fi.vm.sade.haku.oppija.hakemus.resource"/>
            <property name="scan" value="true"/>
        </bean>
    </beans>

</beans>
