name: build and publish

on:
  workflow_dispatch:
  release:
    types: [ created ]
  push:
    paths-ignore:
      - '**.md'

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build-test-and-deploy-jar:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'corretto'
          cache: 'maven'
          check-latest: 'true'

      - uses: szenius/set-timezone@v1.2
        with:
          timezoneLinux: "Europe/Helsinki"

      - name: Build with Maven
        shell: bash
        run: |
          git clone https://github.com/Opetushallitus/ci-tools.git
          source ci-tools/common/setup-tools.sh
          #mvn clean verify -B -Dbranch=${{ github.ref_name }} -Drevision=${{ github.sha }} -DbuildNumber=${{ github.run_number }} -Pit -Dit.usePhantomJs=true
          mvn clean install -DskipTests -B -Dbranch=${{ github.ref_name }} -Drevision=${{ github.sha }} -DbuildNumber=${{ github.run_number }}

      - name: Publish to Github packages
        if: ${{ github.event_name == 'release' }}
        run: mvn --batch-mode deploy -pl fi.vm.sade.haku:haku,hakemus-api,haku-auditlogger -DskipTests -Pghp -B
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPOSITORY: ${{ github.repository }}

      - uses: actions/cache@v4
        id: cache-build
        with:
          path: haku-app/target
          key: ${{ github.sha }}

  deploy-virkailija:
    needs: [build-test-and-deploy-jar]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        id: cache-build
        with:
          path: haku-app/target
          key: ${{ github.sha }}

      - name: Build and deploy Docker container
        shell: bash
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          git clone https://github.com/Opetushallitus/ci-tools.git
          source ci-tools/common/setup-tools.sh
          export ARTIFACT_NAME="haku-virkailija"
          mv haku-app/target/haku-app.war $DOCKER_BUILD_DIR/artifact/haku-app.war
          cp -vr src/main/resources/oph-configuration $DOCKER_BUILD_DIR/config/
          export BASE_IMAGE="baseimage-war-tomcat9-openjdk8"
          ./ci-tools/common/pull-image.sh
          ./ci-tools/github-build/build-fatjar.sh $ARTIFACT_NAME
          ./ci-tools/github-build/upload-image.sh $ARTIFACT_NAME
